package month07.day29;

/**
 * @author ：大爆炸
 * @version 1.0
 * @description 给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n>1并且m>1），每段绳子的长度记为 k[0],k[1]...k[m - 1] 。请问 k[0]*k[1]*...*k[m - 1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。
 * <p>
 * 答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。
 * <p>
 * 来源：力扣（LeetCode）
 * 链接：https://leetcode.cn/problems/jian-sheng-zi-ii-lcof
 * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 * @date 2023/7/29 12:15
 */
public class demo3 {
    public int cuttingRope(int n) {
//        与减绳子1同理，不过n太长，不应该最后乘积完在取余，应该中间每次相乘都取余
//        中间每次都取余与最后一起取余结果是一样的
        if (n < 4) {
            return n - 1;
        }
//        初始长度
        long res = 1;
        int mod = 1000000007;
        int duan = n % 3;
        if (duan == 1) {
//            如果最后一段为1的话，则与前一段合体为4,然后绳子长度去掉4，并且初始长度赋值为最后一段合体长度4
            n -= 4;
            res = 4;
        }
        if (duan == 2) {
//            如果最后一段为2的话，就单独放着，然后绳子长度去掉2，并且初始长度赋值为最后一段长度2
            n -= 2;
            res = 2;
        }
//        开始循环剪断绳子，每次相乘都取余
        while (n != 0) {
            res = res * 3 % mod;
            n -= 3;
        }
        return (int) res;
    }
}

