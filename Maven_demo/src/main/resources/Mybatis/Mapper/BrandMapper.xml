<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


   <!--id 主键映射
    result 其他映射-->
<mapper namespace="Mybatis.Mapper.BrandMapper">

<!--    id 唯一标识
        type 映射的类型：支持别名
-->
    <resultMap id="brandresultMap" type="brand">
 <!--    id：完成主键映射
            column ：表的列名
            property：实体类的属性名
-->
      <result column="brand_name" property="brandName" />
     <result column="company_name" property="companyName" />
    </resultMap>


    <select id="selectAll"  resultMap="brandresultMap">
        select
        *
        from tb_brand;
    </select>

<!--
        *参数占位符
        1.#{}：会将其替换为？，防止sql注入
        2.${}：拼sql，会存在sql注入问题
        3.使用时机：
            * 参数传递的时候用#{}
            * 表明或者列明不固定情况下:${} 会存在sql注入问题
        4.参数类型 parameterType :可以省略
        5.特殊字符处理：
            * 转义字符
            * CDATA区

-->
    <select id="selectByid"   resultMap="brandresultMap" >
        select *
        from tb_brand where id
            <![CDATA[
             <
            ]]>
                 #{id};
    </select>


<!--    条件查询-->
<!--    <select id="selectByCondition" resultMap="brandresultMap">-->
<!--        select *-->
<!--        from tb_brand-->
<!--        where status = #{status}-->
<!--          and company_name like #{companyName}-->
<!--          and brand_name like #{brandName}-->
<!--    </select>-->


<!--动态条件查询-->
    <select id="selectByCondition" resultMap="brandresultMap">
        select *
        from tb_brand
        <where>
            <if test="status!=null">
                and status = #{status}
            </if>
            <if test="companyName!=null and companyName!=''">
                and company_name like #{companyName}
            </if>
            <if test="brandName!=null and brandName!=''">
                and brand_name like #{brandName}
            </if>
        </where>

    </select>
<!--    <select id="selectByConditionsingle" resultMap="brandresultMap">-->
<!--     select  *-->
<!--    from tb_brand where-->
<!--    <choose>-->
<!--        <when test="status!=null">-->
<!--            status = #{status}-->
<!--        </when>-->
<!--        <when test="companyName!=null and companyName!=''">-->
<!--            company_name like #{companyName}-->
<!--        </when>-->
<!--        <when test="brandName!=null and brandName!=''">-->
<!--            brand_name like #{brandName}-->
<!--        </when>-->
<!--            <otherwise>-->
<!--                1=1-->
<!--            </otherwise>-->
<!--    </choose>-->

<!--    </select>-->
    <select id="selectByConditionsingle" resultMap="brandresultMap">
        select  *
        from tb_brand
            <where>
                <choose>
                    <when test="status!=null">
                        status = #{status}
                    </when>
                    <when test="companyName!=null and companyName!=''">
                        company_name like #{companyName}
                    </when>
                    <when test="brandName!=null and brandName!=''">
                        brand_name like #{brandName}
                    </when>
                </choose>
            </where>

    </select>


    <!--    <sql id="brand_colum">-->
<!--        id,brand_name brandName, company_name companyName,ordered,description,status-->
<!--    </sql>-->
<!--    <select id="selectAll" resultType="Brand">-->
<!--        select  -->
<!--&lt;!&ndash;        <include refid="brand_colum"/>&ndash;&gt;-->
<!--        from tb_brand;-->
<!--    </select>-->

<!--useGenerateKeys = "true" keyProperty = "id"   主键返回-->
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand (brand_name,company_name,ordered,description,status)
        values (#{brandName},#{companyName},#{ordered},#{description},#{status});
    </insert>

    <update id="update">
        update tb_brand
            <set>
                <if test="brandName!=null and brandName!=''">
                    brand_name =  #{brandName},
                </if>
                <if test="companyName!=null and companyName!=''">
                    company_name=#{companyName},
                </if>
                <if test="ordered!=null ">
                    ordered=#{ordered},
                </if>
                <if test="description!=null and description!=''">
                    description=#{description},
                </if>
                <if test="status!=null ">
                    status=#{status}
                </if>
            </set>
        where id = #{id};
    </update>


    <delete id="deleteByid">
        delete
        from tb_brand
        where id =#{id};
    </delete>


    <!--       mybatis 会将数组参数，封装成一个Map集合。
                *默认：array = 数组；
                *使用@Param注解改变map集合的默认key的名称
    -->
    <delete id="deleteByids">
        delete
        from tb_brand
        where id
        in
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
                    ;
    </delete>

</mapper>