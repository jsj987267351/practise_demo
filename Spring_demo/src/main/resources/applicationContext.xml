<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd

       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
        ">

    <!--    day2023_03_17.demo1  practise01   初学-->
    <!--        1.导入spring坐标-->
    <!--    2.配置bean-->
    <!--    <bean  id="bookDao" name="dao" class="day2023_03_17.demo1.practise01.dao.impl.BookDaoImpl"/>-->

    <!--    <bean id="bookService" class="day2023_03_17.demo1.practise01.service.impl.BookServiceImpl">-->
    <!--   7.配置service与dao的关系;-->
    <!--       property标签表示配置当前bean的属性，name就是set方法里的对象    ref表示参照哪一个bean  //第9行&ndash;&gt;-->
    <!--        <property name="bookDao" ref="bookDao" />-->
    <!--    </bean>-->


    <!--    day2023_03_17.demo1  practise02   名字和范围注入-->
    <!--scope范围，默认为singleton,为同一个bean-->
    <!--    <bean  id="bookDao" name="dao" class="day2023_03_17.demo1.practise02.mapper.impl.BookDaoImpl" scope="prototype"/>-->
    <!--    <bean id="bookService" name="service service2" class="day2023_03_17.demo1.practise02.service.impl.BookServiceImpl">-->
    <!--    property标签表示配置当前bean的属性，name就是set方法里的对象    ref表示参照哪一个bean  //第9行&ndash;&gt;-->
    <!--        <property name="bookDao" ref="bookDao" />-->
    <!--    </bean>-->


    <!--    day2023_03_17.demo1  practise03    创建bean方法-->
    <!--    方式一：构造方法实例化bean-->
    <!--    <bean  id="bookDao" class="day2023_03_17.demo1.practise03.dao.impl.BookDaoImpl" />-->

    <!--    方式二：使用静态工厂实例化-->
    <!--    <bean id="orderDao" class="day2023_03_17.demo1.practise03.factory.OrderDaoFactory" factory-method="getOrderDao"/>-->

    <!--    方式三：使用实例工厂实例化bean-->
    <!--            <bean id="userFactory" class="day2023_03_17.demo1.practise03.factory.UserDaoFactory"/>-->
    <!--            <bean id="userDao" factory-bean="userFactory" factory-method="getUserDao"/>-->

    <!--    方式四：使用FactoryBean 实例化bean-->
    <!--    <bean id="userDao" class="day2023_03_17.demo1.practise03.factory.UserDaoFactoryBean"/>-->


    <!--    day2023_03_17.demo1  practise04    生命周期-->
    <!--    <bean id="bookDao" class="day2023_03_17.demo1.practise04.dao.impl.BookDaoImpl" init-method="init" destroy-method="destory"/>-->

    <!--    <bean id="bookService" class="day2023_03_17.demo1.practise04.service.impl.BookServiceImpl">-->
    <!--        <property name="bookDao" ref="bookDao"/>-->
    <!--    </bean>-->


    <!--    day2023_03_17.demo1  practise05      setter赋值-->
    <!--    <bean  id="bookDao" class="day2023_03_17.demo1.practise05.dao.impl.BookDaoImpl">-->
    <!--        <property name="connectionNum" value="10"/>-->
    <!--        <property name="databaseName" value="mysql"/>-->
    <!--    </bean>-->
    <!--    <bean  id="userDao" class="day2023_03_17.demo1.practise05.dao.impl.UserDaoImpl"/>-->

    <!--    <bean id="bookService" class="day2023_03_17.demo1.practise05.service.impl.BookServiceImpl">-->
    <!--        <property name="bookDao" ref="bookDao"/>-->
    <!--        <property name="UserDao" ref="userDao"/>-->
    <!--    </bean>-->


    <!--    day2023_03_17.demo1  practise06      构造器赋值-->
    <!--    标准书写-->
    <!--    <bean id="bookDao" class="day2023_03_17.demo1.practise06.dao.impl.BookDaoImpl">-->
    <!--        <constructor-arg name="databaseName" value="mysql"/>-->
    <!--        <constructor-arg name="connectionNum" value="666"/>-->
    <!--    </bean>-->
    <!--    <bean id="userDao" class="day2023_03_17.demo1.practise06.dao.impl.UserDaoImpl"/>-->

    <!--    <bean id="bookService" class="day2023_03_17.demo1.practise06.service.impl.BookServiceImpl">-->
    <!--        <constructor-arg name="bookDao" ref="bookDao"/>-->
    <!--        <constructor-arg name="userDao" ref="userDao"/>-->
    <!--    </bean>-->
    <!--   解决形参名称类型，用类型 -->
    <!--    <bean id="bookDao" class="day2023_03_17.demo1.practise06.dao.impl.BookDaoImpl">-->
    <!--        <constructor-arg type="java.lang.String" value="mysql"/>-->
    <!--        <constructor-arg type="int" value="666"/>-->
    <!--    </bean>-->
    <!--    <bean id="userDao" class="day2023_03_17.demo1.practise06.dao.impl.UserDaoImpl"/>-->

    <!--    <bean id="bookService" class="day2023_03_17.demo1.practise06.service.impl.BookServiceImpl">-->
    <!--        <constructor-arg name="bookDao" ref="bookDao"/>-->
    <!--        <constructor-arg name="userDao" ref="userDao"/>-->
    <!--    </bean>-->
    <!--    解决参数类型重复问题用位置 -->
    <!--    <bean id="bookDao" class="day2023_03_17.demo1.practise06.dao.impl.BookDaoImpl">-->
    <!--        <constructor-arg  index="0" value="mysql"/>-->
    <!--        <constructor-arg  index="1" value="666"/>-->
    <!--    </bean>-->
    <!--    <bean id="userDao" class="day2023_03_17.demo1.practise06.dao.impl.UserDaoImpl"/>-->

    <!--    <bean id="bookService" class="day2023_03_17.demo1.practise06.service.impl.BookServiceImpl">-->
    <!--        <constructor-arg name="bookDao" ref="bookDao"/>-->
    <!--        <constructor-arg name="userDao" ref="userDao"/>-->
    <!--    </bean>-->
    <!--    -->

    <!--    day2023_03_17.demo1  practise07     自动注入-->
<!--    <bean id="bookDao" class="day2023_03_17.demo1.practise07.dao.impl.BookDaoImpl"/>-->
<!--    <bean id="bookService" class="day2023_03_17.demo1.practise07.service.impl.BookServiceImpl" autowire="byType"/>-->

    <!--    day2023_03_17.demo1  practise08      集合注入-->
<!--    <bean id="bookDao" class="day2023_03_17.demo1.practise08.dao.impl.BookDaoImpl">-->
<!--        <property name="array">-->
<!--            <array>-->
<!--                <value>100</value>-->
<!--                <value>200</value>-->
<!--                <value>300</value>-->
<!--            </array>-->
<!--        </property>-->
<!--        <property name="list">-->
<!--            <list>-->
<!--                <value>小丑1</value>-->
<!--                <value>小丑2</value>-->
<!--                <value>小丑3</value>-->
<!--            </list>-->
<!--        </property>-->
<!--        <property name="set">-->
<!--            <set>-->
<!--                <value>小丑1</value>-->
<!--                <value>小丑2</value>-->
<!--                <value>小丑3</value>-->
<!--                <value>小丑3</value>-->
<!--            </set>-->
<!--        </property>-->
<!--        <property name="map">-->
<!--            <map>-->
<!--                <entry key="小丑1" value="111"/>-->
<!--                <entry key="小丑2" value="222"/>-->
<!--                <entry key="小丑3" value="333"/>-->
<!--            </map>-->
<!--        </property>-->
<!--        <property name="properties">-->
<!--            <props>-->
<!--                <prop key="小丑1">111</prop>-->
<!--                <prop key="小丑2">222</prop>-->
<!--                <prop key="小丑3">333</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->

<!--                                                                            -->
    <!--    day2023_03_18  practise09    Properties注入-->
<!--<bean  class="com.alibaba.druid.pool.DruidDataSource">-->
<!--    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>-->
<!--    <property name="url" value="jdbc:mysql//localhost:3306/mybatis"/>-->
<!--    <property name="username" value="root"/>-->
<!--    <property name="password" value="qaz050212"/>-->
<!--</bean>-->
<!--    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
<!--        <property name="driverClass" value="com.mysql.jdbc.Driver"/>-->
<!--        <property name="jdbcUrl" value="jdbc:mysql//localhost:3306/mybatis"/>-->
<!--        <property name="user" value="root"/>-->
<!--        <property name="password" value="qaz050212"/>-->
<!--    </bean>-->

<!--    1.开启context命名空间-->
<!--    2使用context空间加载properties文件-->
<!--    3使用属性占位符${}读取properties文件中的属性-->
<!--    <context:property-placeholder location="jdbc.properties" system-properties-mode="NEVER"/>-->
<!--    <context:property-placeholder location="jdbc.properties,jdbc2.properties" system-properties-mode="NEVER"/>-->
<!--    <context:property-placeholder location="classpath*:*.properties" system-properties-mode="NEVER"/>-->
<!--    <bean class="com.alibaba.druid.pool.DruidDataSource">-->
<!--        <property name="driverClassName" value="${jdbc.driver}"/>-->
<!--        <property name="url" value="${jdbc.url}"/>-->
<!--        <property name="username" value="${jdbc.username}"/>-->
<!--        <property name="password" value="${jdbc.password}"/>-->
<!--    </bean>-->
<!--    <bean id="bookDao" class="day2023_03_18.practise09.dao.impl.BookDaoImpl">-->
<!--        <property name="name" value="${name}"/>-->
<!--    </bean>-->

    <!--    day2023_03_18  practise10  容器-->
<!--    lazy-init 延迟加载-->
<!--    <bean id="bookDao" class="day2023_03_18.practise10.dao.impl.BookDaoImpl" lazy-init="true" />-->


    <!--    day2023_03_18  practise11   注解开发-->
<!--    扫描注解-->
<!--<context:component-scan base-package="day2023_03_18.practise11.demo.dao.impl"/>-->
<!--    <context:component-scan base-package="day2023_03_18.practise11.demo"/>-->

    <!--    day2023_03_18  practise12   bean管理-->

    <!--    day2023_03_18  practise13   依赖注入-->

    <!--    day2023_03_18  practise14   第三方bean管理-->

    <!--    day2023_03_18  practise15   整合mybatis-->

    <!--    day2023_03_18  practise16   整合unit-->

    <!--    day2023_03_19  practise17   AOP-->

    <!--    day2023_03_19  practise18   AOP快速开发-->

    <!--    day2023_03_19  practise19   AOP切入点表达式-->

    <!--    day2023_03_19  practise20   AOP通知类型-->

    <!--    day2023_03_19  practise21   案例，测试接口执行效率-->

    <!--    day2023_03_19  practise22   AOP通知获取数据  参数与返回值-->

    <!--    day2023_03_19  practise23   案例，百度网盘密码数据兼容处理-->

    <!--    day2023_03_19  practise24   事务-->

    <!--    day2023_03_19  practise25   事务相关配置,事务的传播行为-->






</beans>